scratch area + TODO keeper for sjasmplus developers:
====================================================


====================
Ped:

LUA quirks:
    -- v includelua:
    function inc_ld(reg, val)
        _pc('LD '..reg..','..val)
    end
    -- v kode:
    LUA
        inc_ld(A, pass)     -- bug, should be 'A'
    ENDLUA
= no output, no error, just dies. ... Seems like any LUA syntax error does that, just dies.

Z80: multi-argument/strict: introduce the options

FIXME in sources mark further points worth refactoring

STRUCT test + fix bugs
- new feature: ?warning ked instancujes so zlym fyzicky align?

"--lst" bez hodnoty nech spravi default nazov sam
  ==> needs tests (badly, was bugged a lot during development)

ReadBufLine parsing refactored. Now look for other parts of code trying to do similar things and refactor too..

END in IF-ENDIF ???

Z80 opcode40..7F test is using LUA to generate instructions, but I think macro system
is now fixed enough to be capable of that too => try it. => nope, **needs "IF in DUP" fix**
But it was possible to write 80..BF test with sjasmplus macros only with current sjasmplus

DISPLAY trying to display value "-2" (from macro argument) as decimal will display bogus value (seems like 64b clash + something extra)

====================
Docs:
http://z00m128.github.io/sjasmplus/documentation.html#po_output  - kecy o output-e vzdy na disku
